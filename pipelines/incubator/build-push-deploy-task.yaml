#Kabanero! on activate substitute CollectionId for text 'CollectionId'
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: CollectionId-build-push-task
spec:
  inputs:
    resources:
    - name: git-source
      type: git
    params:
    - name: pathToContext
      default: /workspace/extracted
    - name: appsody-yaml-file-path
      default: $HOME/.appsody/.appsody.yaml
    - name: app-deploy-file-name
      default: app-deploy.yaml
    - name: collection-image-registry-url
      default: docker.io
  outputs:
    resources:
    - name: docker-image
      type: image
  steps:
  - name: validate-collection-is-active
    securityContext:
      privileged: true
    image: kabanero/validate-collection:0.1
    command: ["/bin/bash"]
    args:
    - -c
    - "/validate.sh"
    env:
    - name: gitsource
      value: git-source
  - name: build
    securityContext:
      privileged: true
    image: appsody/appsody-buildah:0.5.3 
    command: ["/bin/bash"]
    args:
      - -c
      - |
        echo "Checking for configmap value....DEFAULT_COLLECTION_IMAGE_REGISTRY_URL=$DEFAULT_COLLECTION_IMAGE_REGISTRY_URL"
        COLLECTION_IMAGE_REGISTRY_URL=$(inputs.params.collection-image-registry-url)
        if [ -z "$DEFAULT_COLLECTION_IMAGE_REGISTRY_URL" ]
        then
            echo "DEFAULT_COLLECTION_IMAGE_REGISTRY_URL=$DEFAULT_COLLECTION_IMAGE_REGISTRY_URL given as input by user is empty, so using the registry=$COLLECTION_IMAGE_REGISTRY_URL for collection image download"
        else

            echo " collection image registry url setup by user is $DEFAULT_COLLECTION_IMAGE_REGISTRY_URL"            
            COLLECTION_IMAGE_REGISTRY_URL=$DEFAULT_COLLECTION_IMAGE_REGISTRY_URL
             
            #Creating a cert for authentication of buildah login of the DEFAULT_COLLECTION_IMAGE_REGISTRY_URL registry url 
            echo "HOST=$DEFAULT_COLLECTION_IMAGE_REGISTRY_URL" > cert-creation.sh
            echo "sudo mkdir -p /etc/docker/certs.d/\${HOST}" >> cert-creation.sh
            echo "openssl s_client -connect \${HOST} -servername \${HOST} 2>/dev/null </dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/docker/certs.d/\${HOST}/ca.crt" >> cert-creation.sh
            
            if [[ ( -z "$DEFAULT_COLLECTION_IMAGE_REGISTRY_SECRET_USERNAME" ) || ( -z "$DEFAULT_COLLECTION_IMAGE_REGISTRY_SECRET_PASSWORD" ) ]]
            then
               echo "DEFAULT_COLLECTION_IMAGE_REGISTRY_SECRET_USERNAME or DEFAULT_COLLECTION_IMAGE_REGISTRY_SECRET_PASSWORD is empty ,Assumption is $DEFAULT_COLLECTION_IMAGE_REGISTRY_URL is internal registry, skipping the login to the registry"
            else
               echo "Both DEFAULT_COLLECTION_IMAGE_REGISTRY_URL and Secrets are provided"
               echo "Adding buildah login command to cert-creation.sh script"
               echo "buildah login -u $DEFAULT_COLLECTION_IMAGE_REGISTRY_SECRET_USERNAME -p $DEFAULT_COLLECTION_IMAGE_REGISTRY_SECRET_PASSWORD \${HOST}" >> cert-creation.sh  
            fi
             chmod 755 cert-creation.sh
             ./cert-creation.sh
        fi
        cd /workspace/$gitsource
        OUTPUTS_RESOURCE_DOCKER_IMAGE_URL_LOWERCASE=$( echo $(outputs.resources.docker-image.url) |  tr '[:upper:]' '[:lower:]' )
        appsody build -t "$OUTPUTS_RESOURCE_DOCKER_IMAGE_URL_LOWERCASE" --buildah --buildah-options "--format=docker" --stack-registry "$COLLECTION_IMAGE_REGISTRY_URL"
    env:
    - name: gitsource
      value: git-source
    - name: DEFAULT_COLLECTION_IMAGE_REGISTRY_URL
      valueFrom:
        configMapKeyRef:
         name: collection-image-registry-map
         key: default-collection-image-registry-url
         optional: true
    - name: DEFAULT_COLLECTION_IMAGE_REGISTRY_SECRET_USERNAME
      valueFrom:
        secretKeyRef:
          name: default-collection-image-registry-secret
          key: username
          optional: true
    - name: DEFAULT_COLLECTION_IMAGE_REGISTRY_SECRET_PASSWORD
      valueFrom:
        secretKeyRef:
          name: default-collection-image-registry-secret
          key: password
          optional: true
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
    - name: config-volume
      mountPath: /config
    - name: secret-volume
      mountPath: /etc/secret-volume
  - name: push
    securityContext:
      privileged: true
    image: appsody/appsody-buildah:0.5.3 
    command: ["/bin/bash"]
    args:
      - -c
      - |
        OUTPUTS_RESOURCE_DOCKER_IMAGE_URL_LOWERCASE=$( echo $(outputs.resources.docker-image.url) |  tr '[:upper:]' '[:lower:]' )
        buildah push --tls-verify=false "$OUTPUTS_RESOURCE_DOCKER_IMAGE_URL_LOWERCASE" "docker://$OUTPUTS_RESOURCE_DOCKER_IMAGE_URL_LOWERCASE"
    env:
    - name: gitsource
      value: git-source
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
  volumes:
  - name: varlibcontainers
    emptyDir: {}
  - name: config-volume
    configMap:
      name: collection-image-registry-map
      optional: true
  - name: secret-volume
    secret:
      secretName: default-collection-image-registry-secret
      optional: true